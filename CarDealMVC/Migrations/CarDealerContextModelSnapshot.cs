// <auto-generated />
using System;
using CarDealMVC.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarDealMVC.Migrations
{
    [DbContext(typeof(CarDealerContext))]
    partial class CarDealerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarDealMVC.Models.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarId"));

                    b.Property<int?>("CarcaseTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CarsStats")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EngineNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<int?>("ModelId")
                        .HasColumnType("int");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReleaseYear")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SellerEmployeeId")
                        .HasColumnType("int");

                    b.HasKey("CarId");

                    b.HasIndex("CarcaseTypeId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("ModelId");

                    b.HasIndex("SellerEmployeeId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarDealMVC.Models.CarModel", b =>
                {
                    b.Property<int>("CarModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarModelId"));

                    b.Property<string>("ModelName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarModelId");

                    b.ToTable("CarModels");
                });

            modelBuilder.Entity("CarDealMVC.Models.CarcaseType", b =>
                {
                    b.Property<int>("CarcaseTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarcaseTypeId"));

                    b.Property<string>("TypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarcaseTypeId");

                    b.ToTable("CarcaseTypes");
                });

            modelBuilder.Entity("CarDealMVC.Models.CarsEquipment", b =>
                {
                    b.Property<int>("CarsEquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarsEquipmentId"));

                    b.Property<int?>("CarId")
                        .HasColumnType("int");

                    b.Property<int?>("EquipmentId")
                        .HasColumnType("int");

                    b.HasKey("CarsEquipmentId");

                    b.HasIndex("CarId");

                    b.HasIndex("EquipmentId");

                    b.ToTable("CarsEquipments");
                });

            modelBuilder.Entity("CarDealMVC.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("PositionId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("CarDealMVC.Models.ExtraEquipment", b =>
                {
                    b.Property<int>("ExtraEquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExtraEquipmentId"));

                    b.Property<string>("EquipmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipmentStats")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ExtraEquipmentId");

                    b.ToTable("ExtraEquipments");
                });

            modelBuilder.Entity("CarDealMVC.Models.Manufacturer", b =>
                {
                    b.Property<int>("ManufacturerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManufacturerId"));

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ManufacturerId");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("CarDealMVC.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CarId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPayed")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PassportData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.HasIndex("CarId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CarDealMVC.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PositionId"));

                    b.Property<string>("PositionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PositionId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("CarDealMVC.Models.Car", b =>
                {
                    b.HasOne("CarDealMVC.Models.CarcaseType", "CarcaseType")
                        .WithMany("Cars")
                        .HasForeignKey("CarcaseTypeId");

                    b.HasOne("CarDealMVC.Models.Manufacturer", "Manufacturer")
                        .WithMany("Cars")
                        .HasForeignKey("ManufacturerId");

                    b.HasOne("CarDealMVC.Models.CarModel", "Model")
                        .WithMany("Cars")
                        .HasForeignKey("ModelId");

                    b.HasOne("CarDealMVC.Models.Employee", "SellerEmployee")
                        .WithMany("Cars")
                        .HasForeignKey("SellerEmployeeId");

                    b.Navigation("CarcaseType");

                    b.Navigation("Manufacturer");

                    b.Navigation("Model");

                    b.Navigation("SellerEmployee");
                });

            modelBuilder.Entity("CarDealMVC.Models.CarsEquipment", b =>
                {
                    b.HasOne("CarDealMVC.Models.Car", "Car")
                        .WithMany("CarsEquipments")
                        .HasForeignKey("CarId");

                    b.HasOne("CarDealMVC.Models.ExtraEquipment", "Equipment")
                        .WithMany("CarsEquipments")
                        .HasForeignKey("EquipmentId");

                    b.Navigation("Car");

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("CarDealMVC.Models.Employee", b =>
                {
                    b.HasOne("CarDealMVC.Models.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("CarDealMVC.Models.Order", b =>
                {
                    b.HasOne("CarDealMVC.Models.Car", "Car")
                        .WithMany("Clients")
                        .HasForeignKey("CarId");

                    b.HasOne("CarDealMVC.Models.Employee", null)
                        .WithMany("Clients")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Car");
                });

            modelBuilder.Entity("CarDealMVC.Models.Car", b =>
                {
                    b.Navigation("CarsEquipments");

                    b.Navigation("Clients");
                });

            modelBuilder.Entity("CarDealMVC.Models.CarModel", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("CarDealMVC.Models.CarcaseType", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("CarDealMVC.Models.Employee", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("Clients");
                });

            modelBuilder.Entity("CarDealMVC.Models.ExtraEquipment", b =>
                {
                    b.Navigation("CarsEquipments");
                });

            modelBuilder.Entity("CarDealMVC.Models.Manufacturer", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("CarDealMVC.Models.Position", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
